type Course {
  _id: ID!
  title: String!
  teacher: String
  description: String!
  topic: String
}

type Student {
  _id: ID!
  name: String!
  email: String!
}

type Query {
  "Returns all courses"
  getCourses: [Course],
  "Returns one course"
  getCourse(_id: ID!): Course,
  "Returns all Students"
  getStudents: [Student],
  "Returns one Student"
  getStudent(_id: ID!): Student
}

input CourseInput {
  title: String!
  teacher: String
  description: String!
  topic: String
}

input CourseEditInput {
  title: String
  teacher: String
  description: String
  topic: String
}

input StudentInput {
  name: String!
  email: String!
}

input StudentEditInput {
  name: String
  email: String
}

type Mutation {
  # "Creates a Course"
  createCourse(input: CourseInput!): Course,
  # "Edits a Course"
  editCourse(input: CourseEditInput!): Course,
  # "Creates a Student"
  createStudent(input: StudentInput!): Student,
  # "Edits a Student"
  editStudent(input: StudentEditInput!): Student,
}